<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code | TecendoBits/WeavingBits Blog]]></title>
  <link href="http://tecendobits.cc/blog/blog/categories/code/atom.xml" rel="self"/>
  <link href="http://tecendobits.cc/blog/"/>
  <updated>2013-07-08T13:08:29-03:00</updated>
  <id>http://tecendobits.cc/blog/</id>
  <author>
    <name><![CDATA[gabithume]]></name>
    <email><![CDATA[gabithume@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[First weeks of OPW]]></title>
    <link href="http://tecendobits.cc/blog/first-weeks-of-opw/"/>
    <updated>2013-06-30T10:13:00-03:00</updated>
    <id>http://tecendobits.cc/blog/first-weeks-of-opw</id>
    <content type="html"><![CDATA[<p>The Outreach Program has began on June 17th. Those were two really cool weeks!</p>

<p>One of my favorite things in the whole world is coding, so I think I am in the right project :) Although i didn't properly code during this time, it was filled with learning (super needed).
I had contact with a lot of stuff that I had never imagined before. First of all: I followed in a daily basis the work of a development team. They have to deal with a lot of releases and to maintain a huge system that collects, processes, stores and displays crash reports from clients (this is really a hard work!). Besides that, curently they are also migrating some tools (like PHP to Django), work that requer a lot of team work! Which they do brightly :)</p>

<p>I am going to describe here some of the relevant things that happened in these first weeks. If you are curious about knowing everything that is happening, go check my OPW diary: <a href=https://etherpad.mozilla.org/opw2013>https://etherpad.mozilla.org/opw2013</a>.</p>

<!-- more -->


<hr />

<h3>Socorro Installation</h3>

<p>The first thing I did was <a href=https://socorro.readthedocs.org/en/latest/installation.html#installation-requirements>installing</a> socorro and socorro-crashstats in my Ubuntu VirtualMachine, instead of Mac OS. I found some problems with the installation:</p>

<p>First, I received an error <code>Peer authentication failed for user "test"</code> when i tried to run tests inside socorro. To solve that, I edited the postgresql file <code>/etc/postgresql/9.2/main/pg_hba.conf</code> changing every connection method field to <code>trust</code>.</p>

<p>Then i got <code>psql: FATAL:  role "test" does not exist</code>. So I created the test user:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="n">createuser</span> <span class="o">-</span><span class="n">s</span> <span class="n">test</span>  <span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>A new error was a little bit weird for me: <code>type "citext" does not exist</code>. But I remembered an error fix made by @selenamarie to a database problem:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="s">&quot;psql -c &#39;alter user breakpad_rw superuselr&#39; template1&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>After that, I ran <code>make test</code> that returned <code>role "breakpad_ro" does not exist</code>, so I fixed it with:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="s">&quot;psql -d postgres -f sql/roles.sql&quot;</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>New instructions at installation say to install json_enhancementes to use in PostgreSQL: <code>make json_enhancements_pg_extension</code>. But I got an error when running the following command:<br/>
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="n">socorro</span><span class="o">-</span><span class="n">virtualenv</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">-</span><span class="n">c</span> <span class="s">&quot;from pgxnclient import cli; cli.main([&#39;install&#39;, &#39;json_enhancements&#39;])&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>After talking with @selenamarie and @rhelmer, it became clear that a dev package was needed:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="n">sudo</span> <span class="n">aptitude</span> <span class="n">install</span> <span class="n">postgresql</span><span class="o">-</span><span class="n">server</span><span class="o">-</span><span class="n">dev</span><span class="o">-</span><span class="mf">9.2</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And then the tests finally ran!</p>

<p>After that, it was needed to <a href=https://socorro.readthedocs.org/en/latest/installation.html#populate-postgresql-database>populate the database</a>. At that time, <code>name</code> was missing at <code>--database_superuser</code> in the command that populate the breakpad database using fakedata at Socorro Install page.</p>

<p>In the end, I had some problems while running the server of socorro-crashstats because I didn't install <a href=http://www.thefourtheye.in/2013/04/installing-python-ldap-in-ubuntu.html>some libraries needed to LDAP</a>.</p>

<hr />

<h3>Git Update</h3>

<p>I am always making changes in my fork to test something or by accident. Sometimes I need to reset it. To ignore all modifications and pull to overwrite local changes, you have to clean the working tree (carefully):
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="n">git</span> <span class="n">reset</span> <span class="o">--</span><span class="n">hard</span>
</span><span class='line'><span class="n">$</span> <span class="n">git</span> <span class="n">pull</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And to update your fork based on the original repository:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">moz</span> <span class="nl">https:</span><span class="c1">//github.com/mozilla/socorro.git</span>
</span><span class='line'><span class="n">$</span> <span class="n">git</span> <span class="n">fetch</span> <span class="n">moz</span>
</span><span class='line'><span class="n">$</span> <span class="n">git</span> <span class="n">merge</span> <span class="n">moz</span><span class="o">/</span><span class="n">master</span>
</span><span class='line'><span class="n">$</span> <span class="n">git</span> <span class="n">push</span> <span class="n">origin</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<hr />

<h3>Test Development Research</h3>

<p>After that, @selenamarie and I started reading and discussing about <a href=https://etherpad.mozilla.org/socorro-testing>Socorro testing</a>.</p>

<p>By first, I tried to understand the difference between state and behaviour verification tests:</p>

<p>Tests double objects are used instead of real objects mostly when we want to test without change the real environment. Let me make myself clear with an example from the <a href=http://martinfowler.com/articles/mocksArentStubs.html>mocksArentStubs</a> page: <strong><em>"We wanted to send an email message if we failed to fill an order. The problem is that we don't want to send actual email messages out to customers during testing. So instead we create a test double of our email system, one that we can control and manipulate"</em></strong>. That is a really good and complex reference, which the author presents that a test double object can be of four kinds:</p>

<p><strong>Dummy</strong>: "are around but never actually used"</p>

<p><strong>Fake</strong>: "have working implementations, but usually take some shortcut which makes them not suitable for production"</p>

<p><strong>Stubs</strong>: "provide canned answers to calls made during the test"</p>

<p><strong>Mocks</strong>: "objects pre-programmed with expectations which form a specification of the calls they are expected to receive"</p>

<p>But what is the real different between mocks and stubs?  <br/>
Both are test doubles, which means that they are not calling a real service (like mail or database), but mocks uses behavior verification rather than stubs, which uses state verification.</p>

<p><strong>State verification</strong>: only cares about the final state - and not how that state was derived.</p>

<p><strong>Behaviour verification</strong>: makes you stay focused about what you are testing, it is related to "how should this behave".</p>

<p>There are already mocks in socorro project, so I studied to know more about it and also to understand <a ref=http://dannorth.net/introducing-bdd/>Behavior Driven Development (BDD)</a>, that can be a really great development style. But it can be hard for a team to go from a <code><strong>code => test</strong></code> to a <code><strong>test => code</strong></code> timeline.</p>

<p><strong>Behavior Driven Development (BDD)</strong>:</p>

<p>It is a development style oriented by testing. Like in the traditional TDD, consists in creating a failing test to some new feature, and then implementing the functional feature. The main difference between TDD and BDD is on verification, which is state and behavior respectively.</p>

<p>In BDD we might have a language for feature file named <strong>Gherkin</strong>: "a natural language format describing a feature or part of a feature with representative examples of expected outcomes":</p>

<p><blockquote><p>Given some initial context,  <br/><br/>When an event occurs, <br/><br/>Then ensure some outcomes.</p></blockquote></p>

<p>In other words:  <br/>
=> <strong>given</strong> a system known state before the user or external system perform some action,  <br/>
=> <strong>when</strong> the user or the external system interacts (key actions),  <br/>
=> <strong>then</strong> observe the outcomes.</p>

<p>Which tools can help us?<br/>
<a href=http://lettuce.it/>Lettuce</a>
<a href=https://github.com/rlisagor/freshen>Freshen</a>
<a href=http://behave.readthedocs.org/>Behave</a></p>

<p>So I tried to write an unit test with <a href=http://behave.readthedocs.org/en/latest/tutorial.html>behave</a>, considering files of feature, environment and a test:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="n">sudo</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">behave</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>And I did a test using <code>selenium+behave</code>:
<div><script src='https://gist.github.com/5880058.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>There are already tests in socorro-crashstats with selenium, but they still didn't consider Django tests. In a near future, I might study how that works and create tests for it. For now, those kind of tests are in QA hands at <a href=https://github.com/mozilla/Socorro-Tests/pull/210>Socorro-Tests</a>, so the team is concerned about the idea of bringing those tests inside socorro (in dev hands). A video about socorro tests (dev's and QA's) is presented by Matt Brandt: <a href=http://www.youtube.com/watch?v=usqxFxsmg4o>#SFSE: Continuous Deployment At Mozilla</a></p>

<p>Some usefull links about selenium + django:  <br/>
<a href=http://www.tdd-django-tutorial.com/tutorial/1/>http://www.tdd-django-tutorial.com/tutorial/1/</a>  <br/>
<a href=http://theintern.io/#>http://theintern.io/#</a>  <br/>
<a href=http://lincolnloop.com/blog/2012/nov/2/introduction-django-selenium-testing/>http://lincolnloop.com/blog/2012/nov/2/introduction-django-selenium-testing/</a>  <br/>
<a href=http://thecodachi.blogspot.com.br/2012/08/django-factory-boy-better-test.html>http://thecodachi.blogspot.com.br/2012/08/django-factory-boy-better-test.html</a>  <br/>
<a href=http://www.shiningpanda.com/blog/2012/08/14/selenium-tests-django-14/>http://www.shiningpanda.com/blog/2012/08/14/selenium-tests-django-14/</a></p>

<p>What is better for socorro project in test terms? <br/>
I think it is impossible to have this answer without actually creating some BDD for a socorro module and receiving the team feedback.</p>

<hr />

<h3>Unit test Development</h3>

<p>I searched for some module that I could implement a test for. Then I realized that mostly of the untested lines are related to exceptions. So I decided to learn more about that.</p>

<p>With <a href=http://docs.python.org/2/library/unittest.html>unittest</a> it is possible to test exceptions using <a href=http://docs.python.org/2/library/unittest.html#unittest.TestCase.assertRaises>assertRaise</a>.
In this function, if the exception is not raised, it gives a failure test.</p>

<p>To understand how to implement an exception test like that, I read <code>test_crash_data.py</code>, which is currently 100% tested, and I found some tests like this:</p>

<pre><code>        # Test 5: crash cannot be found
        self.assertRaises(
            ResourceNotFound,
            service.get,
            **{'uuid': 'c44245f4-c93b-49b8-86a2-c15dc3a695cb',
                'datatype': 'processed'}
        )
</code></pre>

<p>So, we can say that an exception test have the following format:  <br/>
<code>assertRaises(nameOfException, functionCalled, *{arguments}, **{keywords})</code></p>

<p>After that, I was reading tests when I found an easy one (I changed a calling function). I implemented it and chant <code>nose coverage</code>. 2 lines are now covered!</p>

<pre><code>         self.assertRaises(CrashIDNotFound,
                           crashstorage.get_raw_dumps,
                           '114559a5-d8e6-428c-8b88-1c1f22120314')
</code></pre>

<hr />

<h3>Socorro Coverage</h3>

<p>There are unit tests on socorro that need more coverage. To know the coverage of socorro files, I ran:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="p">..</span><span class="o">/</span><span class="p">..</span><span class="o">/</span><span class="n">socorro</span><span class="o">-</span><span class="n">virtualenv</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">nosetests</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">coverage</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Which gave me the following coverage: <a href=https://gist.github.com/GabiThume/5938460>Gist 5938460</a></p>

<p>After that, I was reading the source files searching for uncoverage tests, and then I created a <a href=https://github.com/mozilla/socorro/pull/1306>Pull Request 1306</a> for one file 20% uncovered, but @lars unfortunately reported that the file was deprecated, so I changed my focus to search deprecated files first then cover unit tests.</p>

<p>To known exactly which are the files that need coverage, we need to find out which are deprecated, so we created an <a href=https://etherpad.mozilla.org/socorro-deprecation-station>etherpad</a> where we put information collected by a script, then I filled in <a href=https://bugzilla.mozilla.org/show_bug.cgi?id=885411>bug #885411</a> about untested files and we asked for the responsable person of the module to help us to indicate the deprecated ones. Considering the team comments, maybe just <code> /socorro/collector/submitter_app.py</code> and <code>/socorro/cron/jobs/buggy.py</code> files should be tested.</p>

<p>Script to search uncovered modules <strong>at all</strong>, considering the whole socorro package:
<div><script src='https://gist.github.com/5808574.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>So I decided to try to exclude directories on nosetests (at least, the ones we know that are deprecated and the unittest directory as well). I used nose-exclude plugin for it:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">--</span><span class="n">use</span><span class="o">-</span><span class="n">mirrors</span> <span class="o">--</span><span class="n">download</span><span class="o">-</span><span class="n">cache</span><span class="o">=</span><span class="p">.</span><span class="o">/</span><span class="n">pip</span><span class="o">-</span><span class="n">cache</span> <span class="n">nose</span><span class="o">-</span><span class="n">exclude</span><span class="o">==</span><span class="mf">0.1.9</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then I had a <a href=https://bitbucket.org/kgrandis/nose-exclude/issue/8/self-test-failing-on-019>problem</a>: the unittest was excluding itself (nothing was being tested). So, I decided to just choose which ones I wanted to cover, instead of exclude them.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">socorro</span><span class="o">-</span><span class="n">virtualenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">nosetests</span> <span class="n">socorro</span> <span class="o">--</span><span class="k">with</span><span class="o">-</span><span class="n">coverage</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">app</span> <span class="o">/</span>
</span><span class='line'><span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">collector</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">cron</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">database</span> <span class="o">/</span>
</span><span class='line'><span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">external</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">lib</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">middleware</span> <span class="o">/</span>
</span><span class='line'><span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">monitor</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">processor</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">services</span> <span class="o">/</span>
</span><span class='line'><span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">storage</span> <span class="o">--</span><span class="n">cover</span><span class="o">-</span><span class="n">package</span><span class="o">=</span><span class="n">socorro</span><span class="o">.</span><span class="n">webapi</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This is a job that will be retaken later.</p>

<hr />

<h3>Other things</h3>

<p>I cleaned the <a href=https://github.com/mozilla/socorro-crashstats/pull/335>Pull Request #335</a> that creates a failling test to <a href=https://bugzilla.mozilla.org/show_bug.cgi?id=533628>bug #533628</a> (I implemented it for the application).</p>

<p>And started to think about how to solve bug <a href=https://bugzilla.mozilla.org/show_bug.cgi?id=888520>#888520</a></p>

<p>In the next week I will start a template test for unittest, those are usefull links about it:
<a href=https://wiki.mozilla.org/QA/Execution/Web_Testing/Docs/Automation/StyleGuide>https://wiki.mozilla.org/QA/Execution/Web_Testing/Docs/Automation/StyleGuide</a>   <br/>
<a href=https://github.com/mozilla/mozwebqa-test-templates>https://github.com/mozilla/mozwebqa-test-templates</a></p>

<hr />

<h3>Meetings</h3>

<p>I was presented for the team in <a href=https://wiki.mozilla.org/Breakpad/Status_Meetings/2013-June-19>Socorro Weekly Meeting on June 19th</a>. And on <a href=https://air.mozilla.org/the-monday-meeting-20130624/>Mozilla Monday Meeting Day on June 24th</a> I was introduced to the whole Mozilla YAY! :)  <br/>
I was not able to watch live streaming, so I filled in bug <a href=https://bugzilla.mozilla.org/show_bug.cgi?id=886462>#886462</a> reporting that. The agenda for that meeting can be found at <a href=https://wiki.mozilla.org/WeeklyUpdates/2013-06-24>https://wiki.mozilla.org/WeeklyUpdates/2013-06-24</a>  <br/>
And I also called in Weekly meeting on <a href=https://wiki.mozilla.org/Breakpad/Status_Meetings/2013-June-26>June 26</a> during this time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OPW Application for Mozilla]]></title>
    <link href="http://tecendobits.cc/blog/opw-application-for-mozilla/"/>
    <updated>2013-05-27T19:40:00-03:00</updated>
    <id>http://tecendobits.cc/blog/opw-application-for-mozilla</id>
    <content type="html"><![CDATA[<p>I am posting here the application for future reference or to help someone :)</p>

<hr />

<p><strong>[APPLICATION - Mozilla] Gabriela Salvador Thumé</strong></p>

<p><strong>Name:</strong>
Gabriela Salvador Thumé</p>

<p><strong>E-mail address:</strong>
gabithume@gmail.com</p>

<p><strong>IRC Nick: </strong>
gabithume</p>

<p><strong>Web Page / Blog / Microblog:</strong><br/>
<a href=http://tecendobits.cc>http://tecendobits.cc</a>  <br/>
<a href=http://tecendobits.cc/blog>http://tecendobits.cc/blog</a>       <br/>
<a href=http://github.com/GabiThume>http://github.com/GabiThume</a>   <br/>
<a href=http://gitorious.org/~gabithume>http://gitorious.org/~gabithume</a></p>

<!-- more -->


<p><strong>Location: </strong>
São Carlos / São Paulo / Brazil</p>

<p><strong>Education completed or in progress (i.e., university, major/concentration, degree  level, and graduation year): </strong>   <br/>
University of Santa Catarina, Computer Science, Bachelor, 2012.</p>

<p><strong>How did you hear about this program? </strong>  <br/>
By Gnome Women mailing list [0].</p>

<p>[0] https://mail.gnome.org/mailman/listinfo/gnome-women-list</p>

<p><strong>We advise all students applying for coding projects to apply for  Google Summer  of Code as well. Are you planning to apply for Google  Summer  of     Code (once its application period opens on April 22)? </strong>   <br/>
Unfortunatelly I can't apply to Google Summer of Code because I am not currently affiliated in an university as student. In this way, I am applying  just for OPW.</p>

<p><strong>Please     describe your experience with the organization's product as a user     and   as a contributor (include the information about the  contribution    you  made to the project you are interested in here): </strong>   <br/>
I  am using Mozilla Firefox since I started using a computer. I was always  interested in how the development in a large FOSS project like Firefox  happens. So, after visiting Gnome OPW page I came to Mozilla OPW page  and became interested in the Mozilla Crash Stats project: Socorro. From the project ideas list I was interested in both Bug Wrangler and Test Gardner but I found a way to contribute to Test Gardener by coding, which I feel more confortable with. Socorro is written in Python, the language I  love and the main objective is to write  unit/integration tests related to database, backend crash storage and  middleware. Through this project, I believe I will learn a lot about data warehouses, unit testing, crash stats and how a big development group works together.</p>

<p>My first developer experience with Socorro was installing its server and testing the features. After this I asked for help in #opw and #breakpad at irc.mozilla.org and was guided by my prospective mentor, Selena Deckelmann, to fork Socorro and create my own fork [1]. Then I edited the Installation Documentation including instructions to Mac OS and it was my first contribution to Mozilla [2]! Since that I am documenting all my steps as an OPW prospective internship in my blog [3].</p>

<p>Actually  I am working in a new bug [4] which is helping me to understand how to  write unit tests (the main objective of this OPW proposal) for Socorro  and Socorro Crash Stats django app. While developing for that ticket I was introduced for the architecture of   Socorro and I continue to study its source code and documentation   to  understand how can I better help the project.</p>

<p>[0] https://wiki.mozilla.org/Socorro <br/>
[1] https://github.com/GabiThume/socorro <br/>
[2] https://github.com/mozilla/socorro/pull/1197  <br/>
[3] http://tecendobits.cc/blog/starting-things-to-opw/  <br/>
[4] https://bugzilla.mozilla.org/show_bug.cgi?id=533628</p>

<p><strong>Please describe your experience with any other FOSS projects as a user and as a contributor:</strong>      <br/>
I am a GNU/Linux user since 2009. In this time I was majoring in Computer   Science, so I was using FOSS in all my courses. This helped  me  to   understand a lot about how softwares really work. I have  Python, Processing, JavaScript and Puredata as my prefered  programming languages. Using them I created some FOSS projects I consider relevant to  note here: a celullar automata sandbox made  using Processing.js [0]    and an interactive sorting algorithms guide  using Popcorn.js [1]. I   also  contributed to a live coding language  using Web Audio API [2]  and  a  live editor for creative coding in Web  [3]. Along software   development I  was always experimenting with open  hardware, mixing   wearables and  crafts with Arduino and circuits [4,5].</p>

<p>As contributor of a big FOSS project, I am starting now, and OPW is  being an incredible oportunity to me. Therefore, I had given a lot  of   workshops and I always tend to libert my code to everyone.</p>

<p>[0] http://tecendobits.cc/experiments/code/automato-celular.html  <br/>
[1] http://tecendobits.cc/ordenacoes/   <br/>
[2] http://github.com/GabiThume/vivace  <br/>
[3] http://github.com/GabiThume/li7e  <br/>
[4] http://tecendobits.cc/experiments/circuits/circuits.html  <br/>
[5] http://tecendobits.cc/experiments/craft/craft.html</p>

<p><strong>Please describe any relevant projects that you have worked on previously and what knowledge you gained from working on them:</strong>      <br/>
I researched Free Hardware and Software Socialization as part of a scholarship  extension program in Colmeia Group [1] (a University  LUG)   for one  year and a half (2009/2010). During this scholarship I contributed  for the development of a Linux distribution/mod for the    University  of Santa Catarina's [2] Central Library and given talks and workshops to newcomers in free software.</p>

<p>I am  also a member of MuSA [3] Collective (Multimedia, Systems and  Arts)    where I  developed experiments in open software and open  hardware,    mainly related with wearable computing using FLOSS  technologies like Processing,  Scratch, Puredata and Arduino. I did  some workshops and    presentations as MuSA member, to spread the work in  FOSS, open  hardware   and the mix of arts and free culture: "Atelier  Livre" (Free  Atelier)   [4], "Free Robotics Marathon in Latin America"  [5],  "Robotics Marathon   in CS Week" [6], "Phytonetiké Installation"  [7],  "I Free Atelier" [8],   "Creative Computation Workshop" [9] and  others  events listed in [3].</p>

<p>Actually I am also a member of LabMacambira.sf.net Collective [10], where I     current develop free software mainly for Web and audiovisual.</p>

<p>[1] http://www.colmeia.udesc.br/   <br/>
[2] http://www.udesc.br/   <br/>
[3] http://musa.cc/    <br/>
[4] http://musa.cc/2009/12/atelier-livre/    <br/>
[5] http://2012.latinoware.org/free-robotics-marathon/   <br/>
[6] http://musa.cc/2010/10/arduino-e-robos-na-xii-semana-da-computacao-udesc/  <br/>
[7] http://musa.cc/2010/06/phytonetike/  <br/>
[8] http://softwarelivre.org/fisl11/atelier-livre   <br/>
[9] http://musa.cc/2010/07/atelie-livre/    <br/>
[10] http://wiki.nosdigitais.teia.org.br/Lab_Macambira</p>

<p><strong>What project(s) are you interested in (these can be in the same or different organizations)?</strong>    <br/>
I am interested in Test Gardener Project from Mozilla. I am also interested in Bug Wrangler project from Mozilla and Media Type Reprocessing from MediaGoblin.</p>

<p><strong>Who is a possible mentor for the project you are most interested in?</strong>   <br/>
The mentor in Mozilla Test Gardener is Selena Deckelmann (selenamarie@irc.mozilla.org).</p>

<p><strong>Please  describe  the details and the timeline of the work you plan to accomplish on  the project you are most interested in (discuss these first with  the mentor of the project):</strong>       <br/>
My project to MediaGoblin is Test Gardener inside Socorro Project.  The main idea of the project is to write unit tests (and review  existing ones) for Socorro and Socorro Crash Stats django Web  application.</p>

<p>My planned schedule -- together with milestones and OPW announced events -- is the following:</p>

<p><em>1 May - 27 May:</em> Discussing  with my mentor about the exact features and means of    implementation around Socorro unit tests. I want to stay in sync with my mentor ideas and study better the existing unit tests to understand how to implement new ones. I am planning to document, in Mozilla Socorro wiki, all the unit tests I  will be working with -- developing and reviewing -- and stay open for  unit tests already present in Bugzilla and others my mentor and WebTools  team at Mozilla could suggest. I will start  coding -- and probably fixing related tickets  and   creating new ones -- to cover those unit tests.</p>

<p><em>Milestone I @ May 27:</em> accepted participants announced on Gnome page at 7pm UTC</p>

<p><em>27 May - June 17:</em> Implement  unit tests for Socorro, I imagine I will still with this task along the  entire summer, developing unit tests and discussing with Selena my  implementations. We will create those bugs in BugTrack and work from those together.</p>

<p><em>Milestone II @ June 20:</em> be synced with mentor and have all details planned.</p>

<p><em>June 17 - June 24:</em> Implement unit tests for Socorro and Socorro Crash Stats. Continue to review existing unit tests (and delete particular ones).</p>

<p><em>June 25 -  July 2:</em>  Implement unit tests for Socorro and Socorro Crash Stats. Review  existing unit tests. Start investigating how to improve existing test  suite.</p>

<p><em>July 3 - July 10:</em> Still work in implementation of unit tests. Possibly implement features to improve test suite.</p>

<p><em>July 11 -  July 18:</em> Still work in implementation of unit tests.</p>

<p><em>July 19 - July 30:</em>  Still work in implementation of unit tests.</p>

<p><em>Milestone III @ July 30:</em> to participants in good standing with their mentors</p>

<p><em>July 31 - August 14:</em> Still work in implementation of unit tests.</p>

<p><em>August 15 - August 29:</em> Still work in implementation of unit tests.</p>

<p><em>August 30 - September 13:</em> Still work in implementation of unit tests. Start formatting all the source code and documentation to the final weeks.</p>

<p><em>September 14 - September 23:</em> Still work in implementation of unit tests.  Being prepared for the the end of summer with everything (unit tests,  bugs, documentation) well done and ready to upload to review, if  necessary.</p>

<p><em>September 23:</em> Final day!</p>

<p><em>Milestone IV @ September 27:</em> to participants who have successfully completed their internships</p>

<p>I  imagine the whole process as an incremental development, in this way, I  can't presume with details all the steps I'll follow, but I believe I  will in constant touch with my mentor to develop what is going to be  needed. This timeline could change a lot during the process and I am prepared for that. I am totally open for suggestions from my mentor and Mozilla community!</p>

<p>I am planning to document my steps in a daily basis in an Etherpad [0] and my personal blog [1].</p>

<p>[0] http://etherpad.mozilla.org/gabisocorro  <br/>
[1] http://tecendobits.cc/blog</p>

<p><strong>Will you  have any other time commitments, such as school work, another    job,    planned vacation, etc., between June 17 and September 23?</strong>     <br/>
Absolutely not, I graduated last year and since that I am totally free of commitments. I can work fulltime and will be totally commited to the project if selected.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Winter of code]]></title>
    <link href="http://tecendobits.cc/blog/winter-of-code/"/>
    <updated>2013-05-27T17:13:00-03:00</updated>
    <id>http://tecendobits.cc/blog/winter-of-code</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://www.gnome.org/wp-content/themes/gnome-grass/images/gnome-logo.png"></p>

<p>OMG! I am so much happy! I was <a href=https://live.gnome.org/OutreachProgramForWomen/2013/JuneSeptember/#Mozilla>accepted</a> for Outreach Program for Women internship in Mozilla Crash Stats Project!</p>

<p>This program is organized by the <a href=http://www.gnome.org/foundation/>GNOME Foundation</a>! What is awesome! :D <br/>
And the feeling of being a Mozilla developer is so amazing!  <br/>
I am glad for everything!</p>

<p><img class="left" src="https://wiki.mozilla.org/extensions/gmo/skins/gmo/img/screen/template/screen/logo_footer.png"></p>

<p>A big thank you for my mentor Selena Deckelmann!</p>

<p>Also, a thanks to <a href=http://mediagoblin.org/>MediaGoblin</a> guys, other amazing project I had applied for ;)</p>

<p>So this blog now became a day-to-day in my development at <a href=https://wiki.mozilla.org/Socorro>Socorro Project</a> and my contribution could be found at <a href=https://github.com/GabiThume>GitHub</a> :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mozilla Test Gardener in Mac OS X 10.8]]></title>
    <link href="http://tecendobits.cc/blog/starting-things-to-opw/"/>
    <updated>2013-04-21T18:22:00-03:00</updated>
    <id>http://tecendobits.cc/blog/starting-things-to-opw</id>
    <content type="html"><![CDATA[<p><a href=https://live.gnome.org/OutreachProgramForWomen>Outreach Program for Women</a> is a amazing program for include women in Free and Open Source Software. I am really interested in applying. So I decided to start by studing the Mozilla Projects to the OPW.</p>

<p>Project <a href=https://wiki.mozilla.org/GNOME_Outreach_Summer2013>Test Gardener</a>: "Write unit and integration tests for Socorro related to database, backend crash storage and middleware."</p>

<p>My first impress by reading the OPW projects to this year, is that this project of Mozilla is the coolest one. To verify that, I want to spend some time installing, running, and maybe solving some bug of <a href=https://wiki.mozilla.org/Socorro>Socorro</a>.</p>

<!-- more -->




<h2> Installation </h2>




<h3> Requirements </h3>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">postgresql</span> <span class="c1">// PostgreSQL 9.2</span>
</span><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">gpp</span> <span class="c1">// G++ Compiler 2.24</span>
</span><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">git</span> <span class="c1">// Git</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">easy_install</span> <span class="n">psycopg2</span> <span class="c1">// PostgreSQL database adapter for the Python programming language.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Here I have this <a href=https://www.enthought.com/canopy-express/?Download=Download+EPD+Free+7.3-2>Python</a>.</p>

<h3>Configure PostgreSQL</h3>


<p>I had a problem with PATH, so when I tried:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">which</span> <span class="n">psql</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>I saw usr/bin/psql instead of usr/local/bin/psql, so you need to add usr/local/bin to the head of your PATH in your ~/.bash_profile:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">export</span> <span class="n">PATH</span><span class="o">=/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="nl">bin:</span><span class="n">$PATH</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Modify postgresql config to UTC timezone:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">sudo</span> <span class="n">emacs</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">pgsql</span><span class="o">/</span><span class="n">data</span><span class="o">/</span><span class="n">postgresql</span><span class="p">.</span><span class="n">conf</span>
</span><span class='line'><span class="n">timezone</span> <span class="o">=</span> <span class="err">&#39;</span><span class="n">UTC</span><span class="err">&#39;</span>
</span><span class='line'><span class="n">brew</span> <span class="n">service</span> <span class="n">restart</span> <span class="n">postgresql</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then, I received:</p>

<h6>"Could not connect to server: Permission denied

  Is the server running locally and accepting

  connections on Unix domain socket "/var/pgsql_socket/.s.PGSQL.5432"?</h6>


<p>To deal with that, I checked where the target was, created the pgsql_socket directory and a symlink:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">sudo</span> <span class="n">find</span> <span class="o">/</span> <span class="o">-</span><span class="n">name</span> <span class="p">.</span><span class="n">s</span><span class="p">.</span><span class="n">PGSQL</span><span class="mf">.5432</span>
</span><span class='line'><span class="n">mkdir</span> <span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">pgsql_socket</span><span class="o">/</span>
</span><span class='line'><span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="o">/</span><span class="n">private</span><span class="o">/</span><span class="n">tmp</span><span class="o">/</span><span class="p">.</span><span class="n">s</span><span class="p">.</span><span class="n">PGSQL</span><span class="mf">.5432</span> <span class="o">/</span><span class="n">var</span><span class="o">/</span><span class="n">pgsql_socket</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--
// initdb /usr/local/var/postgres -E utf8
// postgres -D /usr/local/var/postgres
//createuser -s -r postgres
-->


<p>Then I booted the PostgreSQL, created a superuser account for myself, and the breakpad_rw account for Socorro:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">initdb</span> <span class="o">-</span><span class="n">D</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">pgsql</span><span class="o">/</span><span class="n">data</span> <span class="o">-</span><span class="n">E</span> <span class="n">utf8</span>
</span><span class='line'><span class="n">postgres</span> <span class="o">-</span><span class="n">D</span> <span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">pgsql</span><span class="o">/</span><span class="n">data</span>
</span><span class='line'><span class="n">createuser</span> <span class="o">-</span><span class="n">s</span> <span class="n">$USER</span>
</span><span class='line'><span class="n">psql</span> <span class="o">-</span><span class="n">c</span> <span class="s">&quot;CREATE USER breakpad_rw&quot;</span> <span class="n">template1</span>
</span><span class='line'><span class="n">psql</span> <span class="o">-</span><span class="n">c</span> <span class="s">&quot;ALTER USER breakpad_rw WITH ENCRYPTED PASSWORD &#39;aPassword&#39;&quot;</span> <span class="n">template1</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2> Socorro </h2>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">git</span> <span class="n">clone</span> <span class="nl">https:</span><span class="c1">//github.com/mozilla/socorro</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2> CrashStats </h2>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">git</span> <span class="n">clone</span> <span class="nl">https:</span><span class="c1">//github.com/mozilla/socorro-crashstats</span>
</span><span class='line'><span class="n">cd</span> <span class="n">socorro</span><span class="o">-</span><span class="n">crashstats</span>
</span><span class='line'><span class="n">git</span> <span class="n">submodule</span> <span class="n">update</span> <span class="o">--</span><span class="n">init</span> <span class="o">--</span><span class="n">recursive</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h4> LESS Preprocessor </h4>


<p>Node:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">git</span> <span class="n">clone</span> <span class="nl">https:</span><span class="c1">//github.com/joyent/node.git</span>
</span><span class='line'><span class="n">cd</span> <span class="n">node</span>
</span><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="n">v0</span><span class="mf">.8.2</span> <span class="p">(</span><span class="n">latest</span> <span class="n">stable</span> <span class="n">version</span> <span class="n">today</span> <span class="o">-</span> <span class="nl">https:</span><span class="c1">//github.com/joyent/node/wiki/Installation)</span>
</span><span class='line'><span class="n">node</span> <span class="o">-</span><span class="n">v</span>
</span><span class='line'><span class="n">export</span> <span class="n">PATH</span><span class="o">=</span><span class="n">$HOME</span><span class="o">/</span><span class="n">local</span><span class="o">/</span><span class="n">node</span><span class="o">/</span><span class="nl">bin:</span><span class="n">$PATH</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>NPM:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">curl</span> <span class="nl">http:</span><span class="c1">//npmjs.org/install.sh | sh</span>
</span><span class='line'><span class="n">npm</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="o">-</span><span class="n">g</span> <span class="n">less</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--
//cd socorro
//sudo pip install -r requirements/dev.txt
-->




<h4> Creating virtualenv and populate it: </h4>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">brew</span> <span class="n">install</span> <span class="n">tcl</span><span class="o">-</span><span class="n">tk</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">easy_install</span> <span class="n">install</span> <span class="n">virtualenv</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">easy_install</span> <span class="n">install</span> <span class="n">virtualenvwrapper</span>
</span><span class='line'><span class="n">virtualenv</span> <span class="o">--</span><span class="n">python</span><span class="o">=</span><span class="n">python2</span><span class="mf">.6</span> <span class="p">.</span><span class="n">virtualenv</span>
</span><span class='line'><span class="n">source</span> <span class="p">.</span><span class="n">virtualenv</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">activate</span>
</span><span class='line'><span class="n">cd</span> <span class="n">socorro</span><span class="o">-</span><span class="n">crashstats</span>
</span><span class='line'><span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">r</span> <span class="n">requirements</span><span class="o">/</span><span class="n">compiled</span><span class="p">.</span><span class="n">txt</span>
</span><span class='line'><span class="n">pip</span> <span class="n">install</span> <span class="o">-</span><span class="n">r</span> <span class="n">requirements</span><span class="o">/</span><span class="n">dev</span><span class="p">.</span><span class="n">txt</span>
</span><span class='line'><span class="n">cp</span> <span class="n">crashstats</span><span class="o">/</span><span class="n">settings</span><span class="o">/</span><span class="n">local</span><span class="p">.</span><span class="n">py</span><span class="o">-</span><span class="n">dist</span> <span class="n">crashstats</span><span class="o">/</span><span class="n">settings</span><span class="o">/</span><span class="n">local</span><span class="p">.</span><span class="n">py</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2> Running tests: </h2>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">cd</span> <span class="n">socorro</span>
</span><span class='line'><span class="n">make</span> <span class="n">test</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>At this point, I have everything working: The CrashStats Server, the PostgreSQL, the virtual environment... But I am getting this problem below and I really don't know how to solve:</p>

<p><div><script src='https://gist.github.com/5440281.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>To solve this, I ran:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">psql</span> <span class="o">-</span><span class="n">d</span> <span class="n">postgres</span> <span class="o">-</span><span class="n">f</span> <span class="n">sql</span><span class="o">/</span><span class="n">roles</span><span class="p">.</span><span class="n">sql</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then, I received an error about "jenkins-pg92" and I fixed it using <a href=https://groups.google.com/forum/?fromgroups=#!topic/mozilla.tools.socorro/DDvCjTDQwo8>this topic</a>:</p>

<p>In socorro/unittest/config/commonconfig.py switch:</p>

<p><strong>databaseHost.default = 'jenkins-pg92' to
databaseHost.default = 'localhost'</strong></p>

<p>After that, I got an error of "permission denied":</p>

<p><div><script src='https://gist.github.com/5440840.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>

<p>And the command below fix that:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="s">&quot;psql -c &#39;alter user breakpad_rw superuser template1&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then I get "Ran 588 tests in 27.220s" and a big OK :)</p>

<p>The reported errors can be found at:</p>

<p>https://bugzilla.mozilla.org/show_bug.cgi?id=864070</p>

<p>https://bugzilla.mozilla.org/show_bug.cgi?id=864854</p>

<p>After that, when running "make minidump_stackwalk", I got the error "cc1plus: error: -Werror=vla: No option -Wvla", so I fixed by commenting the line 85 on file <strong>socorro/google-breakpad/Makefile.in</strong>:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">@</span><span class="n">GCC_TRUE</span><span class="err">@</span> <span class="o">-</span><span class="n">Werror</span><span class="o">=</span><span class="n">vla</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>After following the steps to populate database and running Socorro in dev mode (both servers, even the middleware), I got <code>Page not found (404)</code> when pointing Firefox to <code>http://localhost:8000/home/products/WaterWolf</code>. I updated the cvs files and it seems working. Right now, instead of using cvs, it is possible to populate the database PostgreSQL with fakedata:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">$</span> <span class="p">.</span><span class="o">/</span><span class="n">socorro</span><span class="o">/</span><span class="n">external</span><span class="o">/</span><span class="n">postgresql</span><span class="o">/</span><span class="n">setupdb_app</span><span class="p">.</span><span class="n">py</span> <span class="o">--</span><span class="n">database_name</span><span class="o">=</span><span class="n">breakpad</span> \
</span><span class='line'><span class="o">--</span><span class="n">fakedata</span> <span class="o">--</span><span class="n">dropdb</span> <span class="o">--</span><span class="n">database_superusername</span><span class="o">=</span><span class="n">your_superuser</span> \
</span><span class='line'><span class="o">--</span><span class="n">database_superuserpassword</span><span class="o">=</span><span class="n">bPassword</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--
sudo dscl . -create /Users/postgres UserShell /usr/bin/false
brew uninstall postgresql
brew install postgresql

psql -c 'alter user breakpad_rw superuser'

And after this stage, all the commands did not work.

Well, maybe I will try to install all this again in Linux.

-->

]]></content>
  </entry>
  
</feed>
